syntax = "v1"

info(
    title: "人员管理接口"
    desc: "提供后台人员的增删改查、重设密码、设置角色、启用/禁用等功能"
    version: "v1.0"
)

import "../../common/types.api"

@server(
    prefix: /api/staff
    group: staff
    jwt: Auth
    middleware: SignCheck, JwtAuth
    tags: "员工管理"
)
service admin {
    @doc(
        summary: "添加人员"
        description: "创建后台人员账号。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.create"
    )
    @handler createStaff
    post /staff (CreateStaffReq) returns (CreateStaffResp)

    @doc(
        summary: "人员列表"
        description: "分页查询后台人员列表。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.list"
    )
    @handler listStaff
    get /staff (ListStaffReq) returns (ListStaffResp)

    @doc(
        summary: "人员详情"
        description: "根据ID查询人员详情。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.detail"
    )
    @handler getStaff
    get /staff/:id (IdReq) returns (GetStaffResp)

    @doc(
        summary: "更新人员"
        description: "更新人员基础信息。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.update"
    )
    @handler updateStaff
    put /staff/:id (UpdateStaffReq) returns (BaseResp)

    @doc(
        summary: "删除人员"
        description: "删除人员（软删除）。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.delete"
    )
    @handler deleteStaff
    delete /staff/:id (IdReq) returns (BaseResp)

    @doc(
        summary: "重设密码"
        description: "为人员重设登录密码。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.resetPassword"
    )
    @handler resetStaffPassword
    patch /staff/:id/password (ResetStaffPasswordReq) returns (BaseResp)

    @doc(
        summary: "设置角色"
        description: "为人员分配角色。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.setRoles"
    )
    @handler setStaffRoles
    patch /staff/:id/role (SetStaffRolesReq) returns (BaseResp)

    @doc(
        summary: "更新状态"
        description: "启用/禁用人员账号。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.updateStatus"
    )
    @handler updateStaffStatus
    patch /staff/:id/status (UpdateStaffStatusReq) returns (BaseResp)

    @doc(
        summary: "人员菜单"
        description: "获取人员聚合后的菜单。请求头: Authorization, X-Timestamp, X-Sign"
        id: "admin.staff.menus"
    )
    @handler getStaffMenus
    get /staff/:id/menus (IdReq) returns (GetStaffMenusResp)
}

type (
    // 创建人员请求
    CreateStaffReq {
        Name string `json:"name"`              // 姓名
        Email string `json:"email"`            // 邮箱（唯一）
        Password string `json:"password"`      // 密码
        RoleIds []int64 `json:"roleIds"`       // 角色ID列表
    }

    // 创建人员响应
    CreateStaffResp {
        Code int32 `json:"code"` // 响应码
        Message string `json:"message"` // 响应消息
        Data StaffDetail `json:"data"` // 数据
    }

    // 人员信息
    StaffDetail {
        Id int64 `json:"id"` // ID
        Name string `json:"name"` // 名称
        Email string `json:"email"` // 邮箱
        Status int32 `json:"status"` // 状态：1-启用, 0-禁用
        StatusText string `json:"statusText"` // 状态文本
        Roles []StaffRoleInfo `json:"roles,optional"` // 角色列表
        CreatedAt string `json:"createdAt"` // 创建时间
        UpdatedAt string `json:"updatedAt"` // 更新时间
    }

    // 人员角色信息
    StaffRoleInfo {
        Id int64 `json:"id"`       // 角色ID
        Name string `json:"name"`  // 角色名称
        Code string `json:"code"`  // 角色代码
    }

    // 人员菜单信息
    StaffMenuInfo {
        Id int64 `json:"id"` // ID
        Name string `json:"name"` // 名称
        Path string `json:"path"` // 路径
        Icon string `json:"icon"` // 图标
        Component string `json:"component"` // 组件路径
        Type int32 `json:"type"` // 类型：1-菜单, 2-按钮
        ParentId int64 `json:"parentId"` // 父级ID
        Sort int32 `json:"sort"` // 排序
        Status int32 `json:"status"` // 状态：1-启用, 0-禁用
        StatusText string `json:"statusText"` // 状态文本
        Children []StaffMenuInfo `json:"children,optional"` // 子菜单
    }

    // 列表请求
    ListStaffReq {
        Page int64 `form:"page,default=1,optional"` // 页码
        PageSize int64 `form:"pageSize,default=10,optional"` // 每页数量
        Keyword string `form:"keyword,optional"` // 姓名/邮箱模糊搜索
        Status int32 `form:"status,optional"` // 状态筛选：1-启用, 0-禁用
        RoleId int64 `form:"roleId,optional"` // 角色筛选
    }

    // 列表响应
    ListStaffResp {
        Code int32 `json:"code"` // 响应码
        Message string `json:"message"` // 响应消息
        Data StaffListData `json:"data"` // 数据
    }

    StaffListData {
        Total int64 `json:"total"` // 总记录数
        List []StaffDetail `json:"list"` // 列表
    }

    // 详情响应
    GetStaffResp {
        Code int32 `json:"code"` // 响应码
        Message string `json:"message"` // 响应消息
        Data StaffDetail `json:"data"` // 数据
    }

    // 更新人员请求
    UpdateStaffReq {
        Id int64 `path:"id"` // ID
        Name string `json:"name,optional"` // 名称
        Email string `json:"email,optional"` // 邮箱
    }

    // 重设密码请求
    ResetStaffPasswordReq {
        Id int64 `path:"id"` // ID
        Password string `json:"password"` // 新密码
        ConfirmPassword string `json:"confirmPassword"` // 确认密码
    }

    // 设置角色请求
    SetStaffRolesReq {
        Id int64 `path:"id"` // ID
        RoleIds []int64 `json:"roleIds"`
    }

    // 更新状态请求
    UpdateStaffStatusReq {
        Id int64 `path:"id"` // ID
        Status int32 `json:"status"`  // 1-启用 0-禁用
    }

    // 人员菜单响应
    GetStaffMenusResp {
        Code int32 `json:"code"` // 响应码
        Message string `json:"message"` // 响应消息
        Data []StaffMenuInfo `json:"data"` // 数据
    }
)