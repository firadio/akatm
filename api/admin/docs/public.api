syntax = "v1"

info(
    title: "公开接口"
    desc: "管理后台公开接口（无需认证）"
    version: "v1.0"
)

import "../../common/types.api"

// ==================== 管理员登录 ====================

@server(
    prefix: /api/public
    group: publicAdmin
    tags: "Public"
)
service admin {
    @doc(
        summary: "获取图片验证码"
        description: "生成图片验证码用于管理员登录（公开接口，无需认证）"
        id: "public.admin.getCaptcha"
    )
    @handler getCaptcha
    get /captcha returns (CaptchaResp)

    @doc(
        summary: "管理员登录"
        description: "通过账号、密码和图片验证码登录。登录成功后自动设置Cookie: user_id, session_token（公开接口，无需认证）"
        id: "public.admin.login"
    )
    @handler login
    post /login (AdminLoginReq) returns (AdminLoginResp)
}

// ==================== 类型定义 ====================

type (
    // 验证码响应
    CaptchaResp {
        Code int32 `json:"code"` // 响应码
        Message string `json:"message"` // 响应消息
        Data CaptchaData `json:"data"` // 数据
    }

    CaptchaData {
        CaptchaId string `json:"captchaId"`       // 验证码ID 有效期5分钟
        CaptchaImage string `json:"captchaImage"` // 验证码图片base64
        ExpiresAt int64 `json:"expiresAt"`        // 过期时间（毫秒级时间戳）
    }

    // 管理员登录请求
    AdminLoginReq {
        Email string `json:"email"`         // 邮箱
        Password string `json:"password"`   // 密码
        CaptchaId string `json:"captchaId"` // 验证码ID
        Captcha string `json:"captcha"`     // 验证码值（不区分大小写）
    }

    // 管理员登录响应
    AdminLoginResp {
        Code int32 `json:"code"` // 响应码
        Message string `json:"message"` // 响应消息
        Data AdminLoginData `json:"data"` // 数据
    }

    AdminLoginData {
        UserId int64 `json:"userId"`            // 用户ID（雪花算法生成）
        Name string `json:"name"`                 // 姓名
        Email string `json:"email"`               // 邮箱
        Status int32 `json:"status"`              // 状态 1-启用 0-禁用
        Roles []RoleInfo `json:"roles"`           // 角色列表
        Menus []MenuInfo `json:"menus"`           // 菜单列表（用户权限菜单）
        ExpiresAt int64 `json:"expiresAt"`        // 会话过期时间（毫秒级时间戳）
        // 注意：user_id 和 session_token 会通过 Set-Cookie 响应头自动设置到客户端
        // Set-Cookie: user_id={userId}; Path=/; HttpOnly; Secure; SameSite=Strict
        // Set-Cookie: session_token={SHA256(token)}; Path=/; HttpOnly; Secure; SameSite=Strict; Max-Age=86400
    }

    RoleInfo {
        Id int64 `json:"id"`       // 角色ID
        Name string `json:"name"`  // 角色名称
        Code string `json:"code"`  // 角色代码
    }
)