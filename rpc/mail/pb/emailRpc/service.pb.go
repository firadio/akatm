// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.17.3
// source: rpc/mail/proto/service.proto

package emailRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ============ 通用响应 ============
type BaseResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                           // 响应码
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                      // 响应消息
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BaseResp) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// ============ 邮件发送请求 ============
type SendEmailReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 发件人名称 (可选)
	FromName string `protobuf:"bytes,1,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	// 发件人邮箱 (必填)
	FromEmail string `protobuf:"bytes,2,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	// 收件人名称 (可选)
	ToName string `protobuf:"bytes,3,opt,name=to_name,json=toName,proto3" json:"to_name,omitempty"`
	// 收件人邮箱 (必填)
	ToEmail string `protobuf:"bytes,4,opt,name=to_email,json=toEmail,proto3" json:"to_email,omitempty"`
	// 标题 (必填)
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// 内容 (必填)
	Content string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	// 请求ID
	RequestId     string `protobuf:"bytes,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailReq) Reset() {
	*x = SendEmailReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailReq) ProtoMessage() {}

func (x *SendEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailReq.ProtoReflect.Descriptor instead.
func (*SendEmailReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *SendEmailReq) GetFromName() string {
	if x != nil {
		return x.FromName
	}
	return ""
}

func (x *SendEmailReq) GetFromEmail() string {
	if x != nil {
		return x.FromEmail
	}
	return ""
}

func (x *SendEmailReq) GetToName() string {
	if x != nil {
		return x.ToName
	}
	return ""
}

func (x *SendEmailReq) GetToEmail() string {
	if x != nil {
		return x.ToEmail
	}
	return ""
}

func (x *SendEmailReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendEmailReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendEmailReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// ============ 邮件发送响应 ============
type SendEmailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *SendEmailData         `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailResp) Reset() {
	*x = SendEmailResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailResp) ProtoMessage() {}

func (x *SendEmailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailResp.ProtoReflect.Descriptor instead.
func (*SendEmailResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{2}
}

func (x *SendEmailResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SendEmailResp) GetData() *SendEmailData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ============ 邮件发送数据 ============
type SendEmailData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 邮件ID
	EmailId string `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	// 发送状态
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 发送时间
	SendTime      int64 `protobuf:"varint,3,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailData) Reset() {
	*x = SendEmailData{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailData) ProtoMessage() {}

func (x *SendEmailData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailData.ProtoReflect.Descriptor instead.
func (*SendEmailData) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{3}
}

func (x *SendEmailData) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *SendEmailData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendEmailData) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

// ============ 验证码发送请求 ============
type SendCodeReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 收件人邮箱
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// 场景 (register, reset_password, bind_email, login)
	Scene string `protobuf:"bytes,2,opt,name=scene,proto3" json:"scene,omitempty"`
	// 验证码类型 (email, sms)
	CodeType string `protobuf:"bytes,3,opt,name=code_type,json=codeType,proto3" json:"code_type,omitempty"`
	// 请求ID
	RequestId     string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCodeReq) Reset() {
	*x = SendCodeReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeReq) ProtoMessage() {}

func (x *SendCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeReq.ProtoReflect.Descriptor instead.
func (*SendCodeReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{4}
}

func (x *SendCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendCodeReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *SendCodeReq) GetCodeType() string {
	if x != nil {
		return x.CodeType
	}
	return ""
}

func (x *SendCodeReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// ============ 验证码发送响应 ============
type SendCodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *SendCodeData          `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCodeResp) Reset() {
	*x = SendCodeResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeResp) ProtoMessage() {}

func (x *SendCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeResp.ProtoReflect.Descriptor instead.
func (*SendCodeResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{5}
}

func (x *SendCodeResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SendCodeResp) GetData() *SendCodeData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ============ 验证码发送数据 ============
type SendCodeData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 验证码ID
	CodeId string `protobuf:"bytes,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// 发送状态
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 发送时间
	SendTime int64 `protobuf:"varint,3,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	// 过期时间
	ExpiresAt     int64 `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCodeData) Reset() {
	*x = SendCodeData{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCodeData) ProtoMessage() {}

func (x *SendCodeData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCodeData.ProtoReflect.Descriptor instead.
func (*SendCodeData) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{6}
}

func (x *SendCodeData) GetCodeId() string {
	if x != nil {
		return x.CodeId
	}
	return ""
}

func (x *SendCodeData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendCodeData) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *SendCodeData) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// ============ 验证码验证请求 ============
type VerifyCodeReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 收件人邮箱
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// 场景
	Scene string `protobuf:"bytes,2,opt,name=scene,proto3" json:"scene,omitempty"`
	// 验证码
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// 验证码ID
	CodeId string `protobuf:"bytes,4,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// 请求ID
	RequestId     string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCodeReq) Reset() {
	*x = VerifyCodeReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeReq) ProtoMessage() {}

func (x *VerifyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeReq.ProtoReflect.Descriptor instead.
func (*VerifyCodeReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{7}
}

func (x *VerifyCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *VerifyCodeReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *VerifyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyCodeReq) GetCodeId() string {
	if x != nil {
		return x.CodeId
	}
	return ""
}

func (x *VerifyCodeReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// ============ 验证码验证响应 ============
type VerifyCodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *VerifyCodeData        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCodeResp) Reset() {
	*x = VerifyCodeResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeResp) ProtoMessage() {}

func (x *VerifyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeResp.ProtoReflect.Descriptor instead.
func (*VerifyCodeResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{8}
}

func (x *VerifyCodeResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VerifyCodeResp) GetData() *VerifyCodeData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ============ 验证码验证数据 ============
type VerifyCodeData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 验证结果
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// 验证消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 验证时间
	VerifyTime    int64 `protobuf:"varint,3,opt,name=verify_time,json=verifyTime,proto3" json:"verify_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCodeData) Reset() {
	*x = VerifyCodeData{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeData) ProtoMessage() {}

func (x *VerifyCodeData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeData.ProtoReflect.Descriptor instead.
func (*VerifyCodeData) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyCodeData) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyCodeData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyCodeData) GetVerifyTime() int64 {
	if x != nil {
		return x.VerifyTime
	}
	return 0
}

// ============ 邮件模板信息 ============
type EmailTemplateInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 模板ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 模板名称
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                             // 模板代码
	Subject       string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`                       // 邮件主题
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                       // 邮件内容
	Scene         string                 `protobuf:"bytes,6,opt,name=scene,proto3" json:"scene,omitempty"`                           // 使用场景
	Status        int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                        // 状态 (1启用 0禁用)
	CreatedAt     int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	UpdatedAt     int64                  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailTemplateInfo) Reset() {
	*x = EmailTemplateInfo{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailTemplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplateInfo) ProtoMessage() {}

func (x *EmailTemplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplateInfo.ProtoReflect.Descriptor instead.
func (*EmailTemplateInfo) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{10}
}

func (x *EmailTemplateInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmailTemplateInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailTemplateInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EmailTemplateInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailTemplateInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EmailTemplateInfo) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *EmailTemplateInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EmailTemplateInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *EmailTemplateInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// ============ 邮件发送记录信息 ============
type EmailSendRecordInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // 记录ID
	EmailId       string                 `protobuf:"bytes,2,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`                // 邮件ID
	FromEmail     string                 `protobuf:"bytes,3,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`          // 发件人邮箱
	ToEmail       string                 `protobuf:"bytes,4,opt,name=to_email,json=toEmail,proto3" json:"to_email,omitempty"`                // 收件人邮箱
	Subject       string                 `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`                               // 邮件主题
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                               // 邮件内容
	Scene         string                 `protobuf:"bytes,7,opt,name=scene,proto3" json:"scene,omitempty"`                                   // 发送场景
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`                                 // 发送状态
	ErrorMessage  string                 `protobuf:"bytes,9,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	SendTime      int64                  `protobuf:"varint,10,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`           // 发送时间
	CreatedAt     int64                  `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`        // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailSendRecordInfo) Reset() {
	*x = EmailSendRecordInfo{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailSendRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSendRecordInfo) ProtoMessage() {}

func (x *EmailSendRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSendRecordInfo.ProtoReflect.Descriptor instead.
func (*EmailSendRecordInfo) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{11}
}

func (x *EmailSendRecordInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmailSendRecordInfo) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *EmailSendRecordInfo) GetFromEmail() string {
	if x != nil {
		return x.FromEmail
	}
	return ""
}

func (x *EmailSendRecordInfo) GetToEmail() string {
	if x != nil {
		return x.ToEmail
	}
	return ""
}

func (x *EmailSendRecordInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailSendRecordInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EmailSendRecordInfo) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *EmailSendRecordInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EmailSendRecordInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *EmailSendRecordInfo) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *EmailSendRecordInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// ============ 邮件模板管理请求/响应 ============
type CreateEmailTemplateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                            // 模板名称
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                            // 模板代码
	Subject       string                 `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`                      // 邮件主题
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                      // 邮件内容
	Scene         string                 `protobuf:"bytes,5,opt,name=scene,proto3" json:"scene,omitempty"`                          // 使用场景
	RequestId     string                 `protobuf:"bytes,6,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEmailTemplateReq) Reset() {
	*x = CreateEmailTemplateReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateReq) ProtoMessage() {}

func (x *CreateEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateEmailTemplateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEmailTemplateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateEmailTemplateReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateEmailTemplateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateEmailTemplateReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *CreateEmailTemplateReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateEmailTemplateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *EmailTemplateInfo     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEmailTemplateResp) Reset() {
	*x = CreateEmailTemplateResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEmailTemplateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailTemplateResp) ProtoMessage() {}

func (x *CreateEmailTemplateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailTemplateResp.ProtoReflect.Descriptor instead.
func (*CreateEmailTemplateResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateEmailTemplateResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CreateEmailTemplateResp) GetData() *EmailTemplateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetEmailTemplateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    int64                  `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"` // 模板ID
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`     // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmailTemplateReq) Reset() {
	*x = GetEmailTemplateReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplateReq) ProtoMessage() {}

func (x *GetEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*GetEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetEmailTemplateReq) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *GetEmailTemplateReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetEmailTemplateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *EmailTemplateInfo     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmailTemplateResp) Reset() {
	*x = GetEmailTemplateResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailTemplateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplateResp) ProtoMessage() {}

func (x *GetEmailTemplateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplateResp.ProtoReflect.Descriptor instead.
func (*GetEmailTemplateResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetEmailTemplateResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetEmailTemplateResp) GetData() *EmailTemplateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateEmailTemplateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    int64                  `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"` // 模板ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                // 模板名称
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                                // 模板代码
	Subject       string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`                          // 邮件主题
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                          // 邮件内容
	Scene         string                 `protobuf:"bytes,6,opt,name=scene,proto3" json:"scene,omitempty"`                              // 使用场景
	Status        int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                           // 状态
	RequestId     string                 `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`     // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEmailTemplateReq) Reset() {
	*x = UpdateEmailTemplateReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateReq) ProtoMessage() {}

func (x *UpdateEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateEmailTemplateReq) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *UpdateEmailTemplateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEmailTemplateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateEmailTemplateReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *UpdateEmailTemplateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateEmailTemplateReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *UpdateEmailTemplateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateEmailTemplateReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UpdateEmailTemplateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *EmailTemplateInfo     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEmailTemplateResp) Reset() {
	*x = UpdateEmailTemplateResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEmailTemplateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailTemplateResp) ProtoMessage() {}

func (x *UpdateEmailTemplateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailTemplateResp.ProtoReflect.Descriptor instead.
func (*UpdateEmailTemplateResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateEmailTemplateResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UpdateEmailTemplateResp) GetData() *EmailTemplateInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteEmailTemplateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    int64                  `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"` // 模板ID
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`     // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEmailTemplateReq) Reset() {
	*x = DeleteEmailTemplateReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateReq) ProtoMessage() {}

func (x *DeleteEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteEmailTemplateReq) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *DeleteEmailTemplateReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type DeleteEmailTemplateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEmailTemplateResp) Reset() {
	*x = DeleteEmailTemplateResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEmailTemplateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateResp) ProtoMessage() {}

func (x *DeleteEmailTemplateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateResp.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteEmailTemplateResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

type ListEmailTemplatesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                           // 页码
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                      // 关键词搜索
	Scene         string                 `protobuf:"bytes,4,opt,name=scene,proto3" json:"scene,omitempty"`                          // 场景筛选
	Status        int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                       // 状态筛选
	RequestId     string                 `protobuf:"bytes,6,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEmailTemplatesReq) Reset() {
	*x = ListEmailTemplatesReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmailTemplatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailTemplatesReq) ProtoMessage() {}

func (x *ListEmailTemplatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailTemplatesReq.ProtoReflect.Descriptor instead.
func (*ListEmailTemplatesReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListEmailTemplatesReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEmailTemplatesReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEmailTemplatesReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListEmailTemplatesReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *ListEmailTemplatesReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListEmailTemplatesReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ListEmailTemplatesResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数量
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int64                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	Templates     []*EmailTemplateInfo   `protobuf:"bytes,5,rep,name=templates,proto3" json:"templates,omitempty"`                // 模板列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEmailTemplatesResp) Reset() {
	*x = ListEmailTemplatesResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmailTemplatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailTemplatesResp) ProtoMessage() {}

func (x *ListEmailTemplatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailTemplatesResp.ProtoReflect.Descriptor instead.
func (*ListEmailTemplatesResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListEmailTemplatesResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ListEmailTemplatesResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListEmailTemplatesResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEmailTemplatesResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEmailTemplatesResp) GetTemplates() []*EmailTemplateInfo {
	if x != nil {
		return x.Templates
	}
	return nil
}

// ============ 邮件发送记录请求/响应 ============
type GetEmailSendRecordReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      int64                  `protobuf:"varint,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`   // 记录ID
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmailSendRecordReq) Reset() {
	*x = GetEmailSendRecordReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailSendRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailSendRecordReq) ProtoMessage() {}

func (x *GetEmailSendRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailSendRecordReq.ProtoReflect.Descriptor instead.
func (*GetEmailSendRecordReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetEmailSendRecordReq) GetRecordId() int64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *GetEmailSendRecordReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetEmailSendRecordResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *EmailSendRecordInfo   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmailSendRecordResp) Reset() {
	*x = GetEmailSendRecordResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailSendRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailSendRecordResp) ProtoMessage() {}

func (x *GetEmailSendRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailSendRecordResp.ProtoReflect.Descriptor instead.
func (*GetEmailSendRecordResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetEmailSendRecordResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetEmailSendRecordResp) GetData() *EmailSendRecordInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListEmailSendRecordsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                            // 页码
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页数量
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                       // 关键词搜索
	ToEmail       string                 `protobuf:"bytes,4,opt,name=to_email,json=toEmail,proto3" json:"to_email,omitempty"`        // 收件人邮箱
	Scene         string                 `protobuf:"bytes,5,opt,name=scene,proto3" json:"scene,omitempty"`                           // 场景筛选
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                         // 状态筛选
	StartTime     int64                  `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime       int64                  `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	RequestId     string                 `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`  // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEmailSendRecordsReq) Reset() {
	*x = ListEmailSendRecordsReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmailSendRecordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailSendRecordsReq) ProtoMessage() {}

func (x *ListEmailSendRecordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailSendRecordsReq.ProtoReflect.Descriptor instead.
func (*ListEmailSendRecordsReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListEmailSendRecordsReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEmailSendRecordsReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEmailSendRecordsReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListEmailSendRecordsReq) GetToEmail() string {
	if x != nil {
		return x.ToEmail
	}
	return ""
}

func (x *ListEmailSendRecordsReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *ListEmailSendRecordsReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListEmailSendRecordsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListEmailSendRecordsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ListEmailSendRecordsReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ListEmailSendRecordsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数量
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int64                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	Records       []*EmailSendRecordInfo `protobuf:"bytes,5,rep,name=records,proto3" json:"records,omitempty"`                    // 记录列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEmailSendRecordsResp) Reset() {
	*x = ListEmailSendRecordsResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmailSendRecordsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailSendRecordsResp) ProtoMessage() {}

func (x *ListEmailSendRecordsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailSendRecordsResp.ProtoReflect.Descriptor instead.
func (*ListEmailSendRecordsResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListEmailSendRecordsResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ListEmailSendRecordsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListEmailSendRecordsResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEmailSendRecordsResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEmailSendRecordsResp) GetRecords() []*EmailSendRecordInfo {
	if x != nil {
		return x.Records
	}
	return nil
}

type ResendEmailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      int64                  `protobuf:"varint,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`   // 记录ID
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResendEmailReq) Reset() {
	*x = ResendEmailReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendEmailReq) ProtoMessage() {}

func (x *ResendEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendEmailReq.ProtoReflect.Descriptor instead.
func (*ResendEmailReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{26}
}

func (x *ResendEmailReq) GetRecordId() int64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *ResendEmailReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ResendEmailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *EmailSendRecordInfo   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResendEmailResp) Reset() {
	*x = ResendEmailResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendEmailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendEmailResp) ProtoMessage() {}

func (x *ResendEmailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendEmailResp.ProtoReflect.Descriptor instead.
func (*ResendEmailResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{27}
}

func (x *ResendEmailResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ResendEmailResp) GetData() *EmailSendRecordInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// ============ 邮件统计请求/响应 ============
type GetEmailSendStatsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Scene         string                 `protobuf:"bytes,3,opt,name=scene,proto3" json:"scene,omitempty"`                           // 场景筛选
	RequestId     string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`  // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmailSendStatsReq) Reset() {
	*x = GetEmailSendStatsReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailSendStatsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailSendStatsReq) ProtoMessage() {}

func (x *GetEmailSendStatsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailSendStatsReq.ProtoReflect.Descriptor instead.
func (*GetEmailSendStatsReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetEmailSendStatsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetEmailSendStatsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetEmailSendStatsReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *GetEmailSendStatsReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetEmailSendStatsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *EmailSendStatsData    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmailSendStatsResp) Reset() {
	*x = GetEmailSendStatsResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailSendStatsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailSendStatsResp) ProtoMessage() {}

func (x *GetEmailSendStatsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailSendStatsResp.ProtoReflect.Descriptor instead.
func (*GetEmailSendStatsResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetEmailSendStatsResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetEmailSendStatsResp) GetData() *EmailSendStatsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmailSendStatsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCount    int64                  `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`       // 总发送数量
	SuccessCount  int64                  `protobuf:"varint,2,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"` // 成功发送数量
	FailedCount   int64                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`    // 失败发送数量
	SuccessRate   float64                `protobuf:"fixed64,4,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`   // 成功率
	SceneStats    []*SceneStats          `protobuf:"bytes,5,rep,name=scene_stats,json=sceneStats,proto3" json:"scene_stats,omitempty"`        // 场景统计
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailSendStatsData) Reset() {
	*x = EmailSendStatsData{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailSendStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailSendStatsData) ProtoMessage() {}

func (x *EmailSendStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailSendStatsData.ProtoReflect.Descriptor instead.
func (*EmailSendStatsData) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{30}
}

func (x *EmailSendStatsData) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *EmailSendStatsData) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *EmailSendStatsData) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *EmailSendStatsData) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *EmailSendStatsData) GetSceneStats() []*SceneStats {
	if x != nil {
		return x.SceneStats
	}
	return nil
}

type SceneStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scene         string                 `protobuf:"bytes,1,opt,name=scene,proto3" json:"scene,omitempty"`                                    // 场景
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                                   // 数量
	SuccessCount  int64                  `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"` // 成功数量
	FailedCount   int64                  `protobuf:"varint,4,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`    // 失败数量
	SuccessRate   float64                `protobuf:"fixed64,5,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`   // 成功率
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SceneStats) Reset() {
	*x = SceneStats{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneStats) ProtoMessage() {}

func (x *SceneStats) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneStats.ProtoReflect.Descriptor instead.
func (*SceneStats) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{31}
}

func (x *SceneStats) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *SceneStats) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SceneStats) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *SceneStats) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *SceneStats) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

type GetCodeSendStatsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Scene         string                 `protobuf:"bytes,3,opt,name=scene,proto3" json:"scene,omitempty"`                           // 场景筛选
	RequestId     string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`  // 请求ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCodeSendStatsReq) Reset() {
	*x = GetCodeSendStatsReq{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodeSendStatsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeSendStatsReq) ProtoMessage() {}

func (x *GetCodeSendStatsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeSendStatsReq.ProtoReflect.Descriptor instead.
func (*GetCodeSendStatsReq) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetCodeSendStatsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCodeSendStatsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetCodeSendStatsReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *GetCodeSendStatsReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetCodeSendStatsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *BaseResp              `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *CodeSendStatsData     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCodeSendStatsResp) Reset() {
	*x = GetCodeSendStatsResp{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodeSendStatsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeSendStatsResp) ProtoMessage() {}

func (x *GetCodeSendStatsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeSendStatsResp.ProtoReflect.Descriptor instead.
func (*GetCodeSendStatsResp) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetCodeSendStatsResp) GetBase() *BaseResp {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetCodeSendStatsResp) GetData() *CodeSendStatsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CodeSendStatsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCount    int64                  `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`       // 总发送数量
	SuccessCount  int64                  `protobuf:"varint,2,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"` // 成功发送数量
	FailedCount   int64                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`    // 失败发送数量
	VerifyCount   int64                  `protobuf:"varint,4,opt,name=verify_count,json=verifyCount,proto3" json:"verify_count,omitempty"`    // 验证数量
	SuccessRate   float64                `protobuf:"fixed64,5,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`   // 成功率
	VerifyRate    float64                `protobuf:"fixed64,6,opt,name=verify_rate,json=verifyRate,proto3" json:"verify_rate,omitempty"`      // 验证率
	SceneStats    []*SceneStats          `protobuf:"bytes,7,rep,name=scene_stats,json=sceneStats,proto3" json:"scene_stats,omitempty"`        // 场景统计
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeSendStatsData) Reset() {
	*x = CodeSendStatsData{}
	mi := &file_rpc_mail_proto_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeSendStatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeSendStatsData) ProtoMessage() {}

func (x *CodeSendStatsData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_mail_proto_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeSendStatsData.ProtoReflect.Descriptor instead.
func (*CodeSendStatsData) Descriptor() ([]byte, []int) {
	return file_rpc_mail_proto_service_proto_rawDescGZIP(), []int{34}
}

func (x *CodeSendStatsData) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *CodeSendStatsData) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *CodeSendStatsData) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *CodeSendStatsData) GetVerifyCount() int64 {
	if x != nil {
		return x.VerifyCount
	}
	return 0
}

func (x *CodeSendStatsData) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *CodeSendStatsData) GetVerifyRate() float64 {
	if x != nil {
		return x.VerifyRate
	}
	return 0
}

func (x *CodeSendStatsData) GetSceneStats() []*SceneStats {
	if x != nil {
		return x.SceneStats
	}
	return nil
}

var File_rpc_mail_proto_service_proto protoreflect.FileDescriptor

var file_rpc_mail_proto_service_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x57, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xcd, 0x01,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5c, 0x0a,
	0x0d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x0d, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x0b,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x7b, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x87, 0x01, 0x0a,
	0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x11, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbd, 0x02, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x55, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe2, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x58, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86, 0x02, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x22, 0x4c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x64,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x12, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0xa3, 0x01,
	0x0a, 0x0a, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x96, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x32, 0xbd, 0x07, 0x0a,
	0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37,
	0x0a, 0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x49, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_rpc_mail_proto_service_proto_rawDescOnce sync.Once
	file_rpc_mail_proto_service_proto_rawDescData []byte
)

func file_rpc_mail_proto_service_proto_rawDescGZIP() []byte {
	file_rpc_mail_proto_service_proto_rawDescOnce.Do(func() {
		file_rpc_mail_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_mail_proto_service_proto_rawDesc), len(file_rpc_mail_proto_service_proto_rawDesc)))
	})
	return file_rpc_mail_proto_service_proto_rawDescData
}

var file_rpc_mail_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_rpc_mail_proto_service_proto_goTypes = []any{
	(*BaseResp)(nil),                 // 0: mail.BaseResp
	(*SendEmailReq)(nil),             // 1: mail.SendEmailReq
	(*SendEmailResp)(nil),            // 2: mail.SendEmailResp
	(*SendEmailData)(nil),            // 3: mail.SendEmailData
	(*SendCodeReq)(nil),              // 4: mail.SendCodeReq
	(*SendCodeResp)(nil),             // 5: mail.SendCodeResp
	(*SendCodeData)(nil),             // 6: mail.SendCodeData
	(*VerifyCodeReq)(nil),            // 7: mail.VerifyCodeReq
	(*VerifyCodeResp)(nil),           // 8: mail.VerifyCodeResp
	(*VerifyCodeData)(nil),           // 9: mail.VerifyCodeData
	(*EmailTemplateInfo)(nil),        // 10: mail.EmailTemplateInfo
	(*EmailSendRecordInfo)(nil),      // 11: mail.EmailSendRecordInfo
	(*CreateEmailTemplateReq)(nil),   // 12: mail.CreateEmailTemplateReq
	(*CreateEmailTemplateResp)(nil),  // 13: mail.CreateEmailTemplateResp
	(*GetEmailTemplateReq)(nil),      // 14: mail.GetEmailTemplateReq
	(*GetEmailTemplateResp)(nil),     // 15: mail.GetEmailTemplateResp
	(*UpdateEmailTemplateReq)(nil),   // 16: mail.UpdateEmailTemplateReq
	(*UpdateEmailTemplateResp)(nil),  // 17: mail.UpdateEmailTemplateResp
	(*DeleteEmailTemplateReq)(nil),   // 18: mail.DeleteEmailTemplateReq
	(*DeleteEmailTemplateResp)(nil),  // 19: mail.DeleteEmailTemplateResp
	(*ListEmailTemplatesReq)(nil),    // 20: mail.ListEmailTemplatesReq
	(*ListEmailTemplatesResp)(nil),   // 21: mail.ListEmailTemplatesResp
	(*GetEmailSendRecordReq)(nil),    // 22: mail.GetEmailSendRecordReq
	(*GetEmailSendRecordResp)(nil),   // 23: mail.GetEmailSendRecordResp
	(*ListEmailSendRecordsReq)(nil),  // 24: mail.ListEmailSendRecordsReq
	(*ListEmailSendRecordsResp)(nil), // 25: mail.ListEmailSendRecordsResp
	(*ResendEmailReq)(nil),           // 26: mail.ResendEmailReq
	(*ResendEmailResp)(nil),          // 27: mail.ResendEmailResp
	(*GetEmailSendStatsReq)(nil),     // 28: mail.GetEmailSendStatsReq
	(*GetEmailSendStatsResp)(nil),    // 29: mail.GetEmailSendStatsResp
	(*EmailSendStatsData)(nil),       // 30: mail.EmailSendStatsData
	(*SceneStats)(nil),               // 31: mail.SceneStats
	(*GetCodeSendStatsReq)(nil),      // 32: mail.GetCodeSendStatsReq
	(*GetCodeSendStatsResp)(nil),     // 33: mail.GetCodeSendStatsResp
	(*CodeSendStatsData)(nil),        // 34: mail.CodeSendStatsData
}
var file_rpc_mail_proto_service_proto_depIdxs = []int32{
	0,  // 0: mail.SendEmailResp.base:type_name -> mail.BaseResp
	3,  // 1: mail.SendEmailResp.data:type_name -> mail.SendEmailData
	0,  // 2: mail.SendCodeResp.base:type_name -> mail.BaseResp
	6,  // 3: mail.SendCodeResp.data:type_name -> mail.SendCodeData
	0,  // 4: mail.VerifyCodeResp.base:type_name -> mail.BaseResp
	9,  // 5: mail.VerifyCodeResp.data:type_name -> mail.VerifyCodeData
	0,  // 6: mail.CreateEmailTemplateResp.base:type_name -> mail.BaseResp
	10, // 7: mail.CreateEmailTemplateResp.data:type_name -> mail.EmailTemplateInfo
	0,  // 8: mail.GetEmailTemplateResp.base:type_name -> mail.BaseResp
	10, // 9: mail.GetEmailTemplateResp.data:type_name -> mail.EmailTemplateInfo
	0,  // 10: mail.UpdateEmailTemplateResp.base:type_name -> mail.BaseResp
	10, // 11: mail.UpdateEmailTemplateResp.data:type_name -> mail.EmailTemplateInfo
	0,  // 12: mail.DeleteEmailTemplateResp.base:type_name -> mail.BaseResp
	0,  // 13: mail.ListEmailTemplatesResp.base:type_name -> mail.BaseResp
	10, // 14: mail.ListEmailTemplatesResp.templates:type_name -> mail.EmailTemplateInfo
	0,  // 15: mail.GetEmailSendRecordResp.base:type_name -> mail.BaseResp
	11, // 16: mail.GetEmailSendRecordResp.data:type_name -> mail.EmailSendRecordInfo
	0,  // 17: mail.ListEmailSendRecordsResp.base:type_name -> mail.BaseResp
	11, // 18: mail.ListEmailSendRecordsResp.records:type_name -> mail.EmailSendRecordInfo
	0,  // 19: mail.ResendEmailResp.base:type_name -> mail.BaseResp
	11, // 20: mail.ResendEmailResp.data:type_name -> mail.EmailSendRecordInfo
	0,  // 21: mail.GetEmailSendStatsResp.base:type_name -> mail.BaseResp
	30, // 22: mail.GetEmailSendStatsResp.data:type_name -> mail.EmailSendStatsData
	31, // 23: mail.EmailSendStatsData.scene_stats:type_name -> mail.SceneStats
	0,  // 24: mail.GetCodeSendStatsResp.base:type_name -> mail.BaseResp
	34, // 25: mail.GetCodeSendStatsResp.data:type_name -> mail.CodeSendStatsData
	31, // 26: mail.CodeSendStatsData.scene_stats:type_name -> mail.SceneStats
	1,  // 27: mail.Mail.SendEmail:input_type -> mail.SendEmailReq
	4,  // 28: mail.Mail.SendCode:input_type -> mail.SendCodeReq
	7,  // 29: mail.Mail.VerifyCode:input_type -> mail.VerifyCodeReq
	12, // 30: mail.Mail.CreateEmailTemplate:input_type -> mail.CreateEmailTemplateReq
	14, // 31: mail.Mail.GetEmailTemplate:input_type -> mail.GetEmailTemplateReq
	16, // 32: mail.Mail.UpdateEmailTemplate:input_type -> mail.UpdateEmailTemplateReq
	18, // 33: mail.Mail.DeleteEmailTemplate:input_type -> mail.DeleteEmailTemplateReq
	20, // 34: mail.Mail.ListEmailTemplates:input_type -> mail.ListEmailTemplatesReq
	22, // 35: mail.Mail.GetEmailSendRecord:input_type -> mail.GetEmailSendRecordReq
	24, // 36: mail.Mail.ListEmailSendRecords:input_type -> mail.ListEmailSendRecordsReq
	26, // 37: mail.Mail.ResendEmail:input_type -> mail.ResendEmailReq
	28, // 38: mail.Mail.GetEmailSendStats:input_type -> mail.GetEmailSendStatsReq
	32, // 39: mail.Mail.GetCodeSendStats:input_type -> mail.GetCodeSendStatsReq
	2,  // 40: mail.Mail.SendEmail:output_type -> mail.SendEmailResp
	5,  // 41: mail.Mail.SendCode:output_type -> mail.SendCodeResp
	8,  // 42: mail.Mail.VerifyCode:output_type -> mail.VerifyCodeResp
	13, // 43: mail.Mail.CreateEmailTemplate:output_type -> mail.CreateEmailTemplateResp
	15, // 44: mail.Mail.GetEmailTemplate:output_type -> mail.GetEmailTemplateResp
	17, // 45: mail.Mail.UpdateEmailTemplate:output_type -> mail.UpdateEmailTemplateResp
	19, // 46: mail.Mail.DeleteEmailTemplate:output_type -> mail.DeleteEmailTemplateResp
	21, // 47: mail.Mail.ListEmailTemplates:output_type -> mail.ListEmailTemplatesResp
	23, // 48: mail.Mail.GetEmailSendRecord:output_type -> mail.GetEmailSendRecordResp
	25, // 49: mail.Mail.ListEmailSendRecords:output_type -> mail.ListEmailSendRecordsResp
	27, // 50: mail.Mail.ResendEmail:output_type -> mail.ResendEmailResp
	29, // 51: mail.Mail.GetEmailSendStats:output_type -> mail.GetEmailSendStatsResp
	33, // 52: mail.Mail.GetCodeSendStats:output_type -> mail.GetCodeSendStatsResp
	40, // [40:53] is the sub-list for method output_type
	27, // [27:40] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_rpc_mail_proto_service_proto_init() }
func file_rpc_mail_proto_service_proto_init() {
	if File_rpc_mail_proto_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_mail_proto_service_proto_rawDesc), len(file_rpc_mail_proto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_mail_proto_service_proto_goTypes,
		DependencyIndexes: file_rpc_mail_proto_service_proto_depIdxs,
		MessageInfos:      file_rpc_mail_proto_service_proto_msgTypes,
	}.Build()
	File_rpc_mail_proto_service_proto = out.File
	file_rpc_mail_proto_service_proto_goTypes = nil
	file_rpc_mail_proto_service_proto_depIdxs = nil
}
