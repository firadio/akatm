// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: service.proto

package mail

import (
	"context"

	"akatm/rpc/mail/pb/emailRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseResp                 = emailRpc.BaseResp
	CodeSendStatsData        = emailRpc.CodeSendStatsData
	CreateEmailTemplateReq   = emailRpc.CreateEmailTemplateReq
	CreateEmailTemplateResp  = emailRpc.CreateEmailTemplateResp
	DeleteEmailTemplateReq   = emailRpc.DeleteEmailTemplateReq
	DeleteEmailTemplateResp  = emailRpc.DeleteEmailTemplateResp
	EmailSendRecordInfo      = emailRpc.EmailSendRecordInfo
	EmailSendStatsData       = emailRpc.EmailSendStatsData
	EmailTemplateInfo        = emailRpc.EmailTemplateInfo
	GetCodeSendStatsReq      = emailRpc.GetCodeSendStatsReq
	GetCodeSendStatsResp     = emailRpc.GetCodeSendStatsResp
	GetEmailSendRecordReq    = emailRpc.GetEmailSendRecordReq
	GetEmailSendRecordResp   = emailRpc.GetEmailSendRecordResp
	GetEmailSendStatsReq     = emailRpc.GetEmailSendStatsReq
	GetEmailSendStatsResp    = emailRpc.GetEmailSendStatsResp
	GetEmailTemplateReq      = emailRpc.GetEmailTemplateReq
	GetEmailTemplateResp     = emailRpc.GetEmailTemplateResp
	ListEmailSendRecordsReq  = emailRpc.ListEmailSendRecordsReq
	ListEmailSendRecordsResp = emailRpc.ListEmailSendRecordsResp
	ListEmailTemplatesReq    = emailRpc.ListEmailTemplatesReq
	ListEmailTemplatesResp   = emailRpc.ListEmailTemplatesResp
	ResendEmailReq           = emailRpc.ResendEmailReq
	ResendEmailResp          = emailRpc.ResendEmailResp
	SceneStats               = emailRpc.SceneStats
	SendCodeData             = emailRpc.SendCodeData
	SendCodeReq              = emailRpc.SendCodeReq
	SendCodeResp             = emailRpc.SendCodeResp
	SendEmailData            = emailRpc.SendEmailData
	SendEmailReq             = emailRpc.SendEmailReq
	SendEmailResp            = emailRpc.SendEmailResp
	UpdateEmailTemplateReq   = emailRpc.UpdateEmailTemplateReq
	UpdateEmailTemplateResp  = emailRpc.UpdateEmailTemplateResp
	VerifyCodeData           = emailRpc.VerifyCodeData
	VerifyCodeReq            = emailRpc.VerifyCodeReq
	VerifyCodeResp           = emailRpc.VerifyCodeResp

	Mail interface {
		// ============ 邮件发送相关 ============
		SendEmail(ctx context.Context, in *SendEmailReq, opts ...grpc.CallOption) (*SendEmailResp, error)
		// 发送验证码邮件
		SendCode(ctx context.Context, in *SendCodeReq, opts ...grpc.CallOption) (*SendCodeResp, error)
		// 验证验证码
		VerifyCode(ctx context.Context, in *VerifyCodeReq, opts ...grpc.CallOption) (*VerifyCodeResp, error)
		// ============ 邮件模板管理相关 ============
		CreateEmailTemplate(ctx context.Context, in *CreateEmailTemplateReq, opts ...grpc.CallOption) (*CreateEmailTemplateResp, error)
		// 获取邮件模板
		GetEmailTemplate(ctx context.Context, in *GetEmailTemplateReq, opts ...grpc.CallOption) (*GetEmailTemplateResp, error)
		// 更新邮件模板
		UpdateEmailTemplate(ctx context.Context, in *UpdateEmailTemplateReq, opts ...grpc.CallOption) (*UpdateEmailTemplateResp, error)
		// 删除邮件模板
		DeleteEmailTemplate(ctx context.Context, in *DeleteEmailTemplateReq, opts ...grpc.CallOption) (*DeleteEmailTemplateResp, error)
		// 获取邮件模板列表
		ListEmailTemplates(ctx context.Context, in *ListEmailTemplatesReq, opts ...grpc.CallOption) (*ListEmailTemplatesResp, error)
		// ============ 邮件发送记录相关 ============
		GetEmailSendRecord(ctx context.Context, in *GetEmailSendRecordReq, opts ...grpc.CallOption) (*GetEmailSendRecordResp, error)
		// 获取邮件发送记录列表
		ListEmailSendRecords(ctx context.Context, in *ListEmailSendRecordsReq, opts ...grpc.CallOption) (*ListEmailSendRecordsResp, error)
		// 重发邮件
		ResendEmail(ctx context.Context, in *ResendEmailReq, opts ...grpc.CallOption) (*ResendEmailResp, error)
		// ============ 邮件统计相关 ============
		GetEmailSendStats(ctx context.Context, in *GetEmailSendStatsReq, opts ...grpc.CallOption) (*GetEmailSendStatsResp, error)
		// 获取验证码发送统计
		GetCodeSendStats(ctx context.Context, in *GetCodeSendStatsReq, opts ...grpc.CallOption) (*GetCodeSendStatsResp, error)
	}

	defaultMail struct {
		cli zrpc.Client
	}
)

func NewMail(cli zrpc.Client) Mail {
	return &defaultMail{
		cli: cli,
	}
}

// ============ 邮件发送相关 ============
func (m *defaultMail) SendEmail(ctx context.Context, in *SendEmailReq, opts ...grpc.CallOption) (*SendEmailResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.SendEmail(ctx, in, opts...)
}

// 发送验证码邮件
func (m *defaultMail) SendCode(ctx context.Context, in *SendCodeReq, opts ...grpc.CallOption) (*SendCodeResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.SendCode(ctx, in, opts...)
}

// 验证验证码
func (m *defaultMail) VerifyCode(ctx context.Context, in *VerifyCodeReq, opts ...grpc.CallOption) (*VerifyCodeResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.VerifyCode(ctx, in, opts...)
}

// ============ 邮件模板管理相关 ============
func (m *defaultMail) CreateEmailTemplate(ctx context.Context, in *CreateEmailTemplateReq, opts ...grpc.CallOption) (*CreateEmailTemplateResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.CreateEmailTemplate(ctx, in, opts...)
}

// 获取邮件模板
func (m *defaultMail) GetEmailTemplate(ctx context.Context, in *GetEmailTemplateReq, opts ...grpc.CallOption) (*GetEmailTemplateResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.GetEmailTemplate(ctx, in, opts...)
}

// 更新邮件模板
func (m *defaultMail) UpdateEmailTemplate(ctx context.Context, in *UpdateEmailTemplateReq, opts ...grpc.CallOption) (*UpdateEmailTemplateResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.UpdateEmailTemplate(ctx, in, opts...)
}

// 删除邮件模板
func (m *defaultMail) DeleteEmailTemplate(ctx context.Context, in *DeleteEmailTemplateReq, opts ...grpc.CallOption) (*DeleteEmailTemplateResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.DeleteEmailTemplate(ctx, in, opts...)
}

// 获取邮件模板列表
func (m *defaultMail) ListEmailTemplates(ctx context.Context, in *ListEmailTemplatesReq, opts ...grpc.CallOption) (*ListEmailTemplatesResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.ListEmailTemplates(ctx, in, opts...)
}

// ============ 邮件发送记录相关 ============
func (m *defaultMail) GetEmailSendRecord(ctx context.Context, in *GetEmailSendRecordReq, opts ...grpc.CallOption) (*GetEmailSendRecordResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.GetEmailSendRecord(ctx, in, opts...)
}

// 获取邮件发送记录列表
func (m *defaultMail) ListEmailSendRecords(ctx context.Context, in *ListEmailSendRecordsReq, opts ...grpc.CallOption) (*ListEmailSendRecordsResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.ListEmailSendRecords(ctx, in, opts...)
}

// 重发邮件
func (m *defaultMail) ResendEmail(ctx context.Context, in *ResendEmailReq, opts ...grpc.CallOption) (*ResendEmailResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.ResendEmail(ctx, in, opts...)
}

// ============ 邮件统计相关 ============
func (m *defaultMail) GetEmailSendStats(ctx context.Context, in *GetEmailSendStatsReq, opts ...grpc.CallOption) (*GetEmailSendStatsResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.GetEmailSendStats(ctx, in, opts...)
}

// 获取验证码发送统计
func (m *defaultMail) GetCodeSendStats(ctx context.Context, in *GetCodeSendStatsReq, opts ...grpc.CallOption) (*GetCodeSendStatsResp, error) {
	client := emailRpc.NewMailClient(m.cli.Conn())
	return client.GetCodeSendStats(ctx, in, opts...)
}
