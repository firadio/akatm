// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: service.proto

package server

import (
	"context"

	"akatm/rpc/mail/internal/logic"
	"akatm/rpc/mail/internal/svc"
	"akatm/rpc/mail/pb/emailRpc"
)

type MailServer struct {
	svcCtx *svc.ServiceContext
	emailRpc.UnimplementedMailServer
}

func NewMailServer(svcCtx *svc.ServiceContext) *MailServer {
	return &MailServer{
		svcCtx: svcCtx,
	}
}

// ============ 邮件发送相关 ============
func (s *MailServer) SendEmail(ctx context.Context, in *emailRpc.SendEmailReq) (*emailRpc.SendEmailResp, error) {
	l := logic.NewSendEmailLogic(ctx, s.svcCtx)
	return l.SendEmail(in)
}

// 发送验证码邮件
func (s *MailServer) SendCode(ctx context.Context, in *emailRpc.SendCodeReq) (*emailRpc.SendCodeResp, error) {
	l := logic.NewSendCodeLogic(ctx, s.svcCtx)
	return l.SendCode(in)
}

// 验证验证码
func (s *MailServer) VerifyCode(ctx context.Context, in *emailRpc.VerifyCodeReq) (*emailRpc.VerifyCodeResp, error) {
	l := logic.NewVerifyCodeLogic(ctx, s.svcCtx)
	return l.VerifyCode(in)
}

// ============ 邮件模板管理相关 ============
func (s *MailServer) CreateEmailTemplate(ctx context.Context, in *emailRpc.CreateEmailTemplateReq) (*emailRpc.CreateEmailTemplateResp, error) {
	l := logic.NewCreateEmailTemplateLogic(ctx, s.svcCtx)
	return l.CreateEmailTemplate(in)
}

// 获取邮件模板
func (s *MailServer) GetEmailTemplate(ctx context.Context, in *emailRpc.GetEmailTemplateReq) (*emailRpc.GetEmailTemplateResp, error) {
	l := logic.NewGetEmailTemplateLogic(ctx, s.svcCtx)
	return l.GetEmailTemplate(in)
}

// 更新邮件模板
func (s *MailServer) UpdateEmailTemplate(ctx context.Context, in *emailRpc.UpdateEmailTemplateReq) (*emailRpc.UpdateEmailTemplateResp, error) {
	l := logic.NewUpdateEmailTemplateLogic(ctx, s.svcCtx)
	return l.UpdateEmailTemplate(in)
}

// 删除邮件模板
func (s *MailServer) DeleteEmailTemplate(ctx context.Context, in *emailRpc.DeleteEmailTemplateReq) (*emailRpc.DeleteEmailTemplateResp, error) {
	l := logic.NewDeleteEmailTemplateLogic(ctx, s.svcCtx)
	return l.DeleteEmailTemplate(in)
}

// 获取邮件模板列表
func (s *MailServer) ListEmailTemplates(ctx context.Context, in *emailRpc.ListEmailTemplatesReq) (*emailRpc.ListEmailTemplatesResp, error) {
	l := logic.NewListEmailTemplatesLogic(ctx, s.svcCtx)
	return l.ListEmailTemplates(in)
}

// ============ 邮件发送记录相关 ============
func (s *MailServer) GetEmailSendRecord(ctx context.Context, in *emailRpc.GetEmailSendRecordReq) (*emailRpc.GetEmailSendRecordResp, error) {
	l := logic.NewGetEmailSendRecordLogic(ctx, s.svcCtx)
	return l.GetEmailSendRecord(in)
}

// 获取邮件发送记录列表
func (s *MailServer) ListEmailSendRecords(ctx context.Context, in *emailRpc.ListEmailSendRecordsReq) (*emailRpc.ListEmailSendRecordsResp, error) {
	l := logic.NewListEmailSendRecordsLogic(ctx, s.svcCtx)
	return l.ListEmailSendRecords(in)
}

// 重发邮件
func (s *MailServer) ResendEmail(ctx context.Context, in *emailRpc.ResendEmailReq) (*emailRpc.ResendEmailResp, error) {
	l := logic.NewResendEmailLogic(ctx, s.svcCtx)
	return l.ResendEmail(in)
}

// ============ 邮件统计相关 ============
func (s *MailServer) GetEmailSendStats(ctx context.Context, in *emailRpc.GetEmailSendStatsReq) (*emailRpc.GetEmailSendStatsResp, error) {
	l := logic.NewGetEmailSendStatsLogic(ctx, s.svcCtx)
	return l.GetEmailSendStats(in)
}

// 获取验证码发送统计
func (s *MailServer) GetCodeSendStats(ctx context.Context, in *emailRpc.GetCodeSendStatsReq) (*emailRpc.GetCodeSendStatsResp, error) {
	l := logic.NewGetCodeSendStatsLogic(ctx, s.svcCtx)
	return l.GetCodeSendStats(in)
}
