// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: service.proto

package fams

import (
	"context"

	"akatm/rpc/fams/pb/famsRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserWalletReq                 = famsRpc.AddUserWalletReq
	AddUserWalletResp                = famsRpc.AddUserWalletResp
	AuditBankAccountApplicationReq   = famsRpc.AuditBankAccountApplicationReq
	AuditBankAccountApplicationResp  = famsRpc.AuditBankAccountApplicationResp
	AuditUserWalletAddressReq        = famsRpc.AuditUserWalletAddressReq
	AuditUserWalletAddressResp       = famsRpc.AuditUserWalletAddressResp
	AuditUserWalletWithdrawalReq     = famsRpc.AuditUserWalletWithdrawalReq
	AuditUserWalletWithdrawalResp    = famsRpc.AuditUserWalletWithdrawalResp
	BankAccountApplicationInfo       = famsRpc.BankAccountApplicationInfo
	BankAccountInfo                  = famsRpc.BankAccountInfo
	BankCustomerInfo                 = famsRpc.BankCustomerInfo
	BaseResp                         = famsRpc.BaseResp
	CreateBankAccountApplicationReq  = famsRpc.CreateBankAccountApplicationReq
	CreateBankAccountApplicationResp = famsRpc.CreateBankAccountApplicationResp
	CreateBankAccountReq             = famsRpc.CreateBankAccountReq
	CreateBankAccountResp            = famsRpc.CreateBankAccountResp
	CreateBankCustomerReq            = famsRpc.CreateBankCustomerReq
	CreateBankCustomerResp           = famsRpc.CreateBankCustomerResp
	CreateUserWalletAddressReq       = famsRpc.CreateUserWalletAddressReq
	CreateUserWalletAddressResp      = famsRpc.CreateUserWalletAddressResp
	CreateUserWalletReq              = famsRpc.CreateUserWalletReq
	CreateUserWalletResp             = famsRpc.CreateUserWalletResp
	CreateUserWalletWithdrawalReq    = famsRpc.CreateUserWalletWithdrawalReq
	CreateUserWalletWithdrawalResp   = famsRpc.CreateUserWalletWithdrawalResp
	CurrencyStat                     = famsRpc.CurrencyStat
	DeductUserWalletReq              = famsRpc.DeductUserWalletReq
	DeductUserWalletResp             = famsRpc.DeductUserWalletResp
	DeleteBankAccountReq             = famsRpc.DeleteBankAccountReq
	DeleteBankAccountResp            = famsRpc.DeleteBankAccountResp
	DeleteBankCustomerReq            = famsRpc.DeleteBankCustomerReq
	DeleteBankCustomerResp           = famsRpc.DeleteBankCustomerResp
	DeleteUserWalletAddressReq       = famsRpc.DeleteUserWalletAddressReq
	DeleteUserWalletAddressResp      = famsRpc.DeleteUserWalletAddressResp
	FreezeUserWalletReq              = famsRpc.FreezeUserWalletReq
	FreezeUserWalletResp             = famsRpc.FreezeUserWalletResp
	FundDetailInfo                   = famsRpc.FundDetailInfo
	FundSummaryData                  = famsRpc.FundSummaryData
	GetAgentFundDetailsReq           = famsRpc.GetAgentFundDetailsReq
	GetBankAccountApplicationReq     = famsRpc.GetBankAccountApplicationReq
	GetBankAccountApplicationResp    = famsRpc.GetBankAccountApplicationResp
	GetBankAccountReq                = famsRpc.GetBankAccountReq
	GetBankAccountResp               = famsRpc.GetBankAccountResp
	GetBankCustomerReq               = famsRpc.GetBankCustomerReq
	GetBankCustomerResp              = famsRpc.GetBankCustomerResp
	GetFundDetailReq                 = famsRpc.GetFundDetailReq
	GetFundDetailResp                = famsRpc.GetFundDetailResp
	GetFundSummaryReq                = famsRpc.GetFundSummaryReq
	GetFundSummaryResp               = famsRpc.GetFundSummaryResp
	GetUserFundDetailsReq            = famsRpc.GetUserFundDetailsReq
	GetUserWalletAddressReq          = famsRpc.GetUserWalletAddressReq
	GetUserWalletAddressResp         = famsRpc.GetUserWalletAddressResp
	GetUserWalletReq                 = famsRpc.GetUserWalletReq
	GetUserWalletResp                = famsRpc.GetUserWalletResp
	GetUserWalletWithdrawalReq       = famsRpc.GetUserWalletWithdrawalReq
	GetUserWalletWithdrawalResp      = famsRpc.GetUserWalletWithdrawalResp
	ListAccountTransactionsReq       = famsRpc.ListAccountTransactionsReq
	ListAccountTransactionsResp      = famsRpc.ListAccountTransactionsResp
	ListBankAccountApplicationsReq   = famsRpc.ListBankAccountApplicationsReq
	ListBankAccountApplicationsResp  = famsRpc.ListBankAccountApplicationsResp
	ListBankAccountsReq              = famsRpc.ListBankAccountsReq
	ListBankAccountsResp             = famsRpc.ListBankAccountsResp
	ListBankCustomersReq             = famsRpc.ListBankCustomersReq
	ListBankCustomersResp            = famsRpc.ListBankCustomersResp
	ListFundDetailsReq               = famsRpc.ListFundDetailsReq
	ListFundDetailsResp              = famsRpc.ListFundDetailsResp
	ListUserWalletAddressesReq       = famsRpc.ListUserWalletAddressesReq
	ListUserWalletAddressesResp      = famsRpc.ListUserWalletAddressesResp
	ListUserWalletWithdrawalsReq     = famsRpc.ListUserWalletWithdrawalsReq
	ListUserWalletWithdrawalsResp    = famsRpc.ListUserWalletWithdrawalsResp
	ListUserWalletsReq               = famsRpc.ListUserWalletsReq
	ListUserWalletsResp              = famsRpc.ListUserWalletsResp
	PageReq                          = famsRpc.PageReq
	PageResp                         = famsRpc.PageResp
	TransactionBrief                 = famsRpc.TransactionBrief
	TransactionListData              = famsRpc.TransactionListData
	UnfreezeUserWalletReq            = famsRpc.UnfreezeUserWalletReq
	UnfreezeUserWalletResp           = famsRpc.UnfreezeUserWalletResp
	UpdateBankAccountApplicationReq  = famsRpc.UpdateBankAccountApplicationReq
	UpdateBankAccountApplicationResp = famsRpc.UpdateBankAccountApplicationResp
	UpdateBankAccountReq             = famsRpc.UpdateBankAccountReq
	UpdateBankAccountResp            = famsRpc.UpdateBankAccountResp
	UpdateBankCustomerReq            = famsRpc.UpdateBankCustomerReq
	UpdateBankCustomerResp           = famsRpc.UpdateBankCustomerResp
	UpdateUserWalletAddressReq       = famsRpc.UpdateUserWalletAddressReq
	UpdateUserWalletAddressResp      = famsRpc.UpdateUserWalletAddressResp
	UpdateUserWalletReq              = famsRpc.UpdateUserWalletReq
	UpdateUserWalletResp             = famsRpc.UpdateUserWalletResp
	UpdateUserWalletWithdrawalReq    = famsRpc.UpdateUserWalletWithdrawalReq
	UpdateUserWalletWithdrawalResp   = famsRpc.UpdateUserWalletWithdrawalResp
	UserWalletAddressInfo            = famsRpc.UserWalletAddressInfo
	UserWalletInfo                   = famsRpc.UserWalletInfo
	UserWalletWithdrawalInfo         = famsRpc.UserWalletWithdrawalInfo

	Fams interface {
		// ============ 银行客户管理相关 ============
		CreateBankCustomer(ctx context.Context, in *CreateBankCustomerReq, opts ...grpc.CallOption) (*CreateBankCustomerResp, error)
		// 获取银行客户
		GetBankCustomer(ctx context.Context, in *GetBankCustomerReq, opts ...grpc.CallOption) (*GetBankCustomerResp, error)
		// 更新银行客户
		UpdateBankCustomer(ctx context.Context, in *UpdateBankCustomerReq, opts ...grpc.CallOption) (*UpdateBankCustomerResp, error)
		// 删除银行客户
		DeleteBankCustomer(ctx context.Context, in *DeleteBankCustomerReq, opts ...grpc.CallOption) (*DeleteBankCustomerResp, error)
		// 获取银行客户列表
		ListBankCustomers(ctx context.Context, in *ListBankCustomersReq, opts ...grpc.CallOption) (*ListBankCustomersResp, error)
		// ============ 银行账户管理相关 ============
		CreateBankAccount(ctx context.Context, in *CreateBankAccountReq, opts ...grpc.CallOption) (*CreateBankAccountResp, error)
		// 获取银行账户
		GetBankAccount(ctx context.Context, in *GetBankAccountReq, opts ...grpc.CallOption) (*GetBankAccountResp, error)
		// 更新银行账户
		UpdateBankAccount(ctx context.Context, in *UpdateBankAccountReq, opts ...grpc.CallOption) (*UpdateBankAccountResp, error)
		// 删除银行账户
		DeleteBankAccount(ctx context.Context, in *DeleteBankAccountReq, opts ...grpc.CallOption) (*DeleteBankAccountResp, error)
		// 获取银行账户列表
		ListBankAccounts(ctx context.Context, in *ListBankAccountsReq, opts ...grpc.CallOption) (*ListBankAccountsResp, error)
		// ============ 银行账户申请相关 ============
		CreateBankAccountApplication(ctx context.Context, in *CreateBankAccountApplicationReq, opts ...grpc.CallOption) (*CreateBankAccountApplicationResp, error)
		// 获取银行账户申请
		GetBankAccountApplication(ctx context.Context, in *GetBankAccountApplicationReq, opts ...grpc.CallOption) (*GetBankAccountApplicationResp, error)
		// 更新银行账户申请
		UpdateBankAccountApplication(ctx context.Context, in *UpdateBankAccountApplicationReq, opts ...grpc.CallOption) (*UpdateBankAccountApplicationResp, error)
		// 审核银行账户申请
		AuditBankAccountApplication(ctx context.Context, in *AuditBankAccountApplicationReq, opts ...grpc.CallOption) (*AuditBankAccountApplicationResp, error)
		// 获取银行账户申请列表
		ListBankAccountApplications(ctx context.Context, in *ListBankAccountApplicationsReq, opts ...grpc.CallOption) (*ListBankAccountApplicationsResp, error)
		// ============ 用户钱包管理相关 ============
		CreateUserWallet(ctx context.Context, in *CreateUserWalletReq, opts ...grpc.CallOption) (*CreateUserWalletResp, error)
		// 获取用户钱包
		GetUserWallet(ctx context.Context, in *GetUserWalletReq, opts ...grpc.CallOption) (*GetUserWalletResp, error)
		// 更新用户钱包
		UpdateUserWallet(ctx context.Context, in *UpdateUserWalletReq, opts ...grpc.CallOption) (*UpdateUserWalletResp, error)
		// 获取用户钱包列表
		ListUserWallets(ctx context.Context, in *ListUserWalletsReq, opts ...grpc.CallOption) (*ListUserWalletsResp, error)
		// ============ 钱包地址管理相关 ============
		CreateUserWalletAddress(ctx context.Context, in *CreateUserWalletAddressReq, opts ...grpc.CallOption) (*CreateUserWalletAddressResp, error)
		// 获取钱包地址
		GetUserWalletAddress(ctx context.Context, in *GetUserWalletAddressReq, opts ...grpc.CallOption) (*GetUserWalletAddressResp, error)
		// 更新钱包地址
		UpdateUserWalletAddress(ctx context.Context, in *UpdateUserWalletAddressReq, opts ...grpc.CallOption) (*UpdateUserWalletAddressResp, error)
		// 删除钱包地址
		DeleteUserWalletAddress(ctx context.Context, in *DeleteUserWalletAddressReq, opts ...grpc.CallOption) (*DeleteUserWalletAddressResp, error)
		// 获取钱包地址列表
		ListUserWalletAddresses(ctx context.Context, in *ListUserWalletAddressesReq, opts ...grpc.CallOption) (*ListUserWalletAddressesResp, error)
		// 审核钱包地址
		AuditUserWalletAddress(ctx context.Context, in *AuditUserWalletAddressReq, opts ...grpc.CallOption) (*AuditUserWalletAddressResp, error)
		// ============ 提现管理相关 ============
		CreateUserWalletWithdrawal(ctx context.Context, in *CreateUserWalletWithdrawalReq, opts ...grpc.CallOption) (*CreateUserWalletWithdrawalResp, error)
		// 获取提现记录
		GetUserWalletWithdrawal(ctx context.Context, in *GetUserWalletWithdrawalReq, opts ...grpc.CallOption) (*GetUserWalletWithdrawalResp, error)
		// 更新提现记录
		UpdateUserWalletWithdrawal(ctx context.Context, in *UpdateUserWalletWithdrawalReq, opts ...grpc.CallOption) (*UpdateUserWalletWithdrawalResp, error)
		// 审核提现申请
		AuditUserWalletWithdrawal(ctx context.Context, in *AuditUserWalletWithdrawalReq, opts ...grpc.CallOption) (*AuditUserWalletWithdrawalResp, error)
		// 获取提现记录列表
		ListUserWalletWithdrawals(ctx context.Context, in *ListUserWalletWithdrawalsReq, opts ...grpc.CallOption) (*ListUserWalletWithdrawalsResp, error)
		// ============ 资金操作相关 ============
		FreezeUserWallet(ctx context.Context, in *FreezeUserWalletReq, opts ...grpc.CallOption) (*FreezeUserWalletResp, error)
		// 解冻资金
		UnfreezeUserWallet(ctx context.Context, in *UnfreezeUserWalletReq, opts ...grpc.CallOption) (*UnfreezeUserWalletResp, error)
		// 扣减资金
		DeductUserWallet(ctx context.Context, in *DeductUserWalletReq, opts ...grpc.CallOption) (*DeductUserWalletResp, error)
		// 增加资金
		AddUserWallet(ctx context.Context, in *AddUserWalletReq, opts ...grpc.CallOption) (*AddUserWalletResp, error)
		// ============ 资金明细相关 ============
		ListFundDetails(ctx context.Context, in *ListFundDetailsReq, opts ...grpc.CallOption) (*ListFundDetailsResp, error)
		// 获取资金明细详情
		GetFundDetail(ctx context.Context, in *GetFundDetailReq, opts ...grpc.CallOption) (*GetFundDetailResp, error)
		// 获取资金统计总览
		GetFundSummary(ctx context.Context, in *GetFundSummaryReq, opts ...grpc.CallOption) (*GetFundSummaryResp, error)
		// 获取用户资金明细
		GetUserFundDetails(ctx context.Context, in *GetUserFundDetailsReq, opts ...grpc.CallOption) (*ListFundDetailsResp, error)
		// 获取代理资金明细
		GetAgentFundDetails(ctx context.Context, in *GetAgentFundDetailsReq, opts ...grpc.CallOption) (*ListFundDetailsResp, error)
		// 获取账户流水
		ListAccountTransactions(ctx context.Context, in *ListAccountTransactionsReq, opts ...grpc.CallOption) (*ListAccountTransactionsResp, error)
	}

	defaultFams struct {
		cli zrpc.Client
	}
)

func NewFams(cli zrpc.Client) Fams {
	return &defaultFams{
		cli: cli,
	}
}

// ============ 银行客户管理相关 ============
func (m *defaultFams) CreateBankCustomer(ctx context.Context, in *CreateBankCustomerReq, opts ...grpc.CallOption) (*CreateBankCustomerResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.CreateBankCustomer(ctx, in, opts...)
}

// 获取银行客户
func (m *defaultFams) GetBankCustomer(ctx context.Context, in *GetBankCustomerReq, opts ...grpc.CallOption) (*GetBankCustomerResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetBankCustomer(ctx, in, opts...)
}

// 更新银行客户
func (m *defaultFams) UpdateBankCustomer(ctx context.Context, in *UpdateBankCustomerReq, opts ...grpc.CallOption) (*UpdateBankCustomerResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UpdateBankCustomer(ctx, in, opts...)
}

// 删除银行客户
func (m *defaultFams) DeleteBankCustomer(ctx context.Context, in *DeleteBankCustomerReq, opts ...grpc.CallOption) (*DeleteBankCustomerResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.DeleteBankCustomer(ctx, in, opts...)
}

// 获取银行客户列表
func (m *defaultFams) ListBankCustomers(ctx context.Context, in *ListBankCustomersReq, opts ...grpc.CallOption) (*ListBankCustomersResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListBankCustomers(ctx, in, opts...)
}

// ============ 银行账户管理相关 ============
func (m *defaultFams) CreateBankAccount(ctx context.Context, in *CreateBankAccountReq, opts ...grpc.CallOption) (*CreateBankAccountResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.CreateBankAccount(ctx, in, opts...)
}

// 获取银行账户
func (m *defaultFams) GetBankAccount(ctx context.Context, in *GetBankAccountReq, opts ...grpc.CallOption) (*GetBankAccountResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetBankAccount(ctx, in, opts...)
}

// 更新银行账户
func (m *defaultFams) UpdateBankAccount(ctx context.Context, in *UpdateBankAccountReq, opts ...grpc.CallOption) (*UpdateBankAccountResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UpdateBankAccount(ctx, in, opts...)
}

// 删除银行账户
func (m *defaultFams) DeleteBankAccount(ctx context.Context, in *DeleteBankAccountReq, opts ...grpc.CallOption) (*DeleteBankAccountResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.DeleteBankAccount(ctx, in, opts...)
}

// 获取银行账户列表
func (m *defaultFams) ListBankAccounts(ctx context.Context, in *ListBankAccountsReq, opts ...grpc.CallOption) (*ListBankAccountsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListBankAccounts(ctx, in, opts...)
}

// ============ 银行账户申请相关 ============
func (m *defaultFams) CreateBankAccountApplication(ctx context.Context, in *CreateBankAccountApplicationReq, opts ...grpc.CallOption) (*CreateBankAccountApplicationResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.CreateBankAccountApplication(ctx, in, opts...)
}

// 获取银行账户申请
func (m *defaultFams) GetBankAccountApplication(ctx context.Context, in *GetBankAccountApplicationReq, opts ...grpc.CallOption) (*GetBankAccountApplicationResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetBankAccountApplication(ctx, in, opts...)
}

// 更新银行账户申请
func (m *defaultFams) UpdateBankAccountApplication(ctx context.Context, in *UpdateBankAccountApplicationReq, opts ...grpc.CallOption) (*UpdateBankAccountApplicationResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UpdateBankAccountApplication(ctx, in, opts...)
}

// 审核银行账户申请
func (m *defaultFams) AuditBankAccountApplication(ctx context.Context, in *AuditBankAccountApplicationReq, opts ...grpc.CallOption) (*AuditBankAccountApplicationResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.AuditBankAccountApplication(ctx, in, opts...)
}

// 获取银行账户申请列表
func (m *defaultFams) ListBankAccountApplications(ctx context.Context, in *ListBankAccountApplicationsReq, opts ...grpc.CallOption) (*ListBankAccountApplicationsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListBankAccountApplications(ctx, in, opts...)
}

// ============ 用户钱包管理相关 ============
func (m *defaultFams) CreateUserWallet(ctx context.Context, in *CreateUserWalletReq, opts ...grpc.CallOption) (*CreateUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.CreateUserWallet(ctx, in, opts...)
}

// 获取用户钱包
func (m *defaultFams) GetUserWallet(ctx context.Context, in *GetUserWalletReq, opts ...grpc.CallOption) (*GetUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetUserWallet(ctx, in, opts...)
}

// 更新用户钱包
func (m *defaultFams) UpdateUserWallet(ctx context.Context, in *UpdateUserWalletReq, opts ...grpc.CallOption) (*UpdateUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UpdateUserWallet(ctx, in, opts...)
}

// 获取用户钱包列表
func (m *defaultFams) ListUserWallets(ctx context.Context, in *ListUserWalletsReq, opts ...grpc.CallOption) (*ListUserWalletsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListUserWallets(ctx, in, opts...)
}

// ============ 钱包地址管理相关 ============
func (m *defaultFams) CreateUserWalletAddress(ctx context.Context, in *CreateUserWalletAddressReq, opts ...grpc.CallOption) (*CreateUserWalletAddressResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.CreateUserWalletAddress(ctx, in, opts...)
}

// 获取钱包地址
func (m *defaultFams) GetUserWalletAddress(ctx context.Context, in *GetUserWalletAddressReq, opts ...grpc.CallOption) (*GetUserWalletAddressResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetUserWalletAddress(ctx, in, opts...)
}

// 更新钱包地址
func (m *defaultFams) UpdateUserWalletAddress(ctx context.Context, in *UpdateUserWalletAddressReq, opts ...grpc.CallOption) (*UpdateUserWalletAddressResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UpdateUserWalletAddress(ctx, in, opts...)
}

// 删除钱包地址
func (m *defaultFams) DeleteUserWalletAddress(ctx context.Context, in *DeleteUserWalletAddressReq, opts ...grpc.CallOption) (*DeleteUserWalletAddressResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.DeleteUserWalletAddress(ctx, in, opts...)
}

// 获取钱包地址列表
func (m *defaultFams) ListUserWalletAddresses(ctx context.Context, in *ListUserWalletAddressesReq, opts ...grpc.CallOption) (*ListUserWalletAddressesResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListUserWalletAddresses(ctx, in, opts...)
}

// 审核钱包地址
func (m *defaultFams) AuditUserWalletAddress(ctx context.Context, in *AuditUserWalletAddressReq, opts ...grpc.CallOption) (*AuditUserWalletAddressResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.AuditUserWalletAddress(ctx, in, opts...)
}

// ============ 提现管理相关 ============
func (m *defaultFams) CreateUserWalletWithdrawal(ctx context.Context, in *CreateUserWalletWithdrawalReq, opts ...grpc.CallOption) (*CreateUserWalletWithdrawalResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.CreateUserWalletWithdrawal(ctx, in, opts...)
}

// 获取提现记录
func (m *defaultFams) GetUserWalletWithdrawal(ctx context.Context, in *GetUserWalletWithdrawalReq, opts ...grpc.CallOption) (*GetUserWalletWithdrawalResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetUserWalletWithdrawal(ctx, in, opts...)
}

// 更新提现记录
func (m *defaultFams) UpdateUserWalletWithdrawal(ctx context.Context, in *UpdateUserWalletWithdrawalReq, opts ...grpc.CallOption) (*UpdateUserWalletWithdrawalResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UpdateUserWalletWithdrawal(ctx, in, opts...)
}

// 审核提现申请
func (m *defaultFams) AuditUserWalletWithdrawal(ctx context.Context, in *AuditUserWalletWithdrawalReq, opts ...grpc.CallOption) (*AuditUserWalletWithdrawalResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.AuditUserWalletWithdrawal(ctx, in, opts...)
}

// 获取提现记录列表
func (m *defaultFams) ListUserWalletWithdrawals(ctx context.Context, in *ListUserWalletWithdrawalsReq, opts ...grpc.CallOption) (*ListUserWalletWithdrawalsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListUserWalletWithdrawals(ctx, in, opts...)
}

// ============ 资金操作相关 ============
func (m *defaultFams) FreezeUserWallet(ctx context.Context, in *FreezeUserWalletReq, opts ...grpc.CallOption) (*FreezeUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.FreezeUserWallet(ctx, in, opts...)
}

// 解冻资金
func (m *defaultFams) UnfreezeUserWallet(ctx context.Context, in *UnfreezeUserWalletReq, opts ...grpc.CallOption) (*UnfreezeUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.UnfreezeUserWallet(ctx, in, opts...)
}

// 扣减资金
func (m *defaultFams) DeductUserWallet(ctx context.Context, in *DeductUserWalletReq, opts ...grpc.CallOption) (*DeductUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.DeductUserWallet(ctx, in, opts...)
}

// 增加资金
func (m *defaultFams) AddUserWallet(ctx context.Context, in *AddUserWalletReq, opts ...grpc.CallOption) (*AddUserWalletResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.AddUserWallet(ctx, in, opts...)
}

// ============ 资金明细相关 ============
func (m *defaultFams) ListFundDetails(ctx context.Context, in *ListFundDetailsReq, opts ...grpc.CallOption) (*ListFundDetailsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListFundDetails(ctx, in, opts...)
}

// 获取资金明细详情
func (m *defaultFams) GetFundDetail(ctx context.Context, in *GetFundDetailReq, opts ...grpc.CallOption) (*GetFundDetailResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetFundDetail(ctx, in, opts...)
}

// 获取资金统计总览
func (m *defaultFams) GetFundSummary(ctx context.Context, in *GetFundSummaryReq, opts ...grpc.CallOption) (*GetFundSummaryResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetFundSummary(ctx, in, opts...)
}

// 获取用户资金明细
func (m *defaultFams) GetUserFundDetails(ctx context.Context, in *GetUserFundDetailsReq, opts ...grpc.CallOption) (*ListFundDetailsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetUserFundDetails(ctx, in, opts...)
}

// 获取代理资金明细
func (m *defaultFams) GetAgentFundDetails(ctx context.Context, in *GetAgentFundDetailsReq, opts ...grpc.CallOption) (*ListFundDetailsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.GetAgentFundDetails(ctx, in, opts...)
}

// 获取账户流水
func (m *defaultFams) ListAccountTransactions(ctx context.Context, in *ListAccountTransactionsReq, opts ...grpc.CallOption) (*ListAccountTransactionsResp, error) {
	client := famsRpc.NewFamsClient(m.cli.Conn())
	return client.ListAccountTransactions(ctx, in, opts...)
}
